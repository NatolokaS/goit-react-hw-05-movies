{"version":3,"file":"static/js/736.5de635af.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  gap: 50px;\n  align-items: baseline;\n  font-size: 18px;\n  padding: 20px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const NavStyled = styled.nav`\n  display: flex;\n  gap: 20px;\n  font-weight: 500;\n  list-style: none;\n`;\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCast, onFetchError } from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { HeaderStyled, NavStyled } from './Cast.styled';\n\nconst endPoint = '/movie';\nconst defaultImage = 'https://texty.org.ua/media/images/357130486_651443390347614_3599390347963367785.width-1000.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchMovieCast(endPoint, movieId)\n      .then(data => {\n        setCast(data.cast);\n      })\n      .catch(onFetchError)\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      <h3 className={HeaderStyled}>Cast:</h3>\n      {loading && <Loader />}\n      {cast.length !== 0 ? (\n        <ul className={NavStyled}>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <li key={id}>\n              <b>{name}</b>\n              <p>Character: {character}</p>\n              <img\n                src={\n                  profile_path\n                    ? `http://image.tmdb.org/t/p/w185${profile_path}`\n                    : defaultImage\n                }\n                alt={name}\n                width=\"100\"\n                height=\"150\"\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Sorry! We don't have any information about cast</p>\n      )}\n    </>\n  );\n};\nexport default Cast;","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader\">\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nexport const paramsForNotify = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '24px',\n};\n\nconst KEY = 'bd27c037ab2cca01c1960a6ee250d410';\nconst URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMovies(endPoint) {\n  const url = `${URL}${endPoint}?api_key=${KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\nexport async function fetchSearchMovies(endPoint, query) {\n  const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n  const url = `${URL}${endPoint}/${movieId}?api_key=${KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieCast(endPoint, movieId) {\n  const url = `${URL}${endPoint}/${movieId}/credits?api_key=${KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n  const url = `${URL}${endPoint}/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\nexport function onFetchError() {\n  Notify.failure(\n    'Oops! Something went wrong! Try reloading the page or make another choice!',\n    paramsForNotify\n  );\n}"],"names":["HeaderStyled","styled","_templateObject","_taggedTemplateLiteral","NavStyled","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","cast","setCast","useEffect","fetchMovieCast","then","data","catch","onFetchError","finally","_jsxs","_Fragment","children","_jsx","className","Loader","length","map","_ref","id","name","character","profile_path","src","concat","alt","width","height","ColorRing","visible","ariaLabel","wrapperStyle","wrapperClass","colors","paramsForNotify","position","timeout","fontSize","KEY","URL","fetchMovies","_x","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","url","response","_context","prev","next","axios","sent","abrupt","stop","fetchSearchMovies","_x2","_x3","_fetchSearchMovies","_callee2","query","_context2","fetchMovieDetails","_x4","_x5","_fetchMovieDetails","_callee3","_context3","_x6","_x7","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x8","_x9","_fetchMovieReviews","_callee5","_context5","Notify"],"sourceRoot":""}